#BlueJ class context
comment0.target=AdjacencyListGraph
comment1.params=
comment1.target=AdjacencyListGraph()
comment2.params=node
comment2.target=boolean\ add(java.lang.Object)
comment2.text=\r\n\tAdd\ a\ node\ to\ the\ graph\r\n\r\n\t@param\ node\ the\ data\ to\ add\ to\ the\ graph.\ Duplicate\ data\ will\ not\ be\ added.\r\n\t@return\ true\ if\ the\ data\ was\ successfully\ added\ to\ graph\r\n
comment3.params=from\ to
comment3.target=boolean\ addEdge(java.lang.Object,\ java.lang.Object)
comment3.text=\r\n\tAdd\ an\ edge\ between\ two\ nodes\ in\ the\ graph\r\n\r\n\tOnly\ add\ an\ edge\ if\ both\ nodes\ exist\ AND\ if\ an\ edge\ does\ not\ already\ exist\r\n\r\n\t@param\ from\ the\ node\ to\ add\ the\ edge\ from\r\n\t@param\ to\ the\ node\ to\ add\ the\ edge\ to\r\n\t@return\ true\ if\ the\ edge\ was\ successfully\ added\ to\ the\ graph\r\n
comment4.params=from\ to
comment4.target=boolean\ hasEdge(java.lang.Object,\ java.lang.Object)
comment4.text=\r\n\tCheck\ if\ an\ edge\ exists\ between\ from\ and\ to\r\n\r\n\t@param\ from\ the\ node\ to\ check\ from\r\n\t@param\ to\ the\ node\ to\ check\ to\r\n\t@return\ true\ if\ an\ edge\ exists\ between\ from\ and\ to\r\n
comment5.params=node
comment5.target=boolean\ contains(java.lang.Object)
comment5.text=\r\n\tCheck\ if\ graph\ contains\ specified\ node\r\n\r\n\t@param\ node\ the\ node\ to\ check\ for\r\n\t@return\ true\ if\ node\ exists\ in\ graph\r\n
comment6.params=
comment6.target=java.util.List\ getNodes()
comment6.text=\r\n\tReturn\ a\ list\ of\ all\ nodes\ in\ the\ graph\r\n\r\n\t@return\ a\ list\ of\ all\ nodes\ in\ the\ graph\r\n
comment7.params=node
comment7.target=java.util.List\ getNeighbors(java.lang.Object)
comment7.text=\r\n\tReturn\ a\ list\ of\ nodes\ that\ node\ is\ connected\ to\ by\ an\ edge\r\n\r\n\t@param\ node\ the\ node\ to\ check\ for\ neighbors\r\n\t@return\ the\ list\ of\ neighbors\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\tReturn\ the\ number\ of\ nodes\ in\ the\ graph\r\n\r\n\t@return\ the\ number\ of\ nodes\ in\ the\ graph\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\tReturn\ a\ string\ representation\ of\ the\ graph\ data\r\n\r\n\t@return\ a\ string\ representation\ of\ the\ graph\r\n
numComments=10
