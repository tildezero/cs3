#BlueJ class context
comment0.target=WeightedGraph
comment1.params=from\ to\ weight
comment1.target=void\ setWeight(java.lang.Object,\ java.lang.Object,\ int)
comment1.text=\r\n\tSet\ the\ weight\ between\ two\ nodes\r\n\r\n\t@param\ from\ the\ node\ to\ set\ the\ weight\ from\r\n\t@param\ to\ the\ node\ to\ set\ the\ weight\ to\r\n\t@param\ the\ weight\ to\ set\r\n
comment2.params=from\ to
comment2.target=int\ getWeight(java.lang.Object,\ java.lang.Object)
comment2.text=\r\n\tSet\ the\ weight\ between\ two\ nodes\r\n\r\n\tIf\ there\ is\ no\ edge\ between\ the\ nodes,\ this\ will\ return\ 0.\r\n\tIf\ no\ weight\ has\ been\ assigned\ to\ these\ nodes,\ then\ this\ will\ return\ 0.\r\n\t\r\n\t@param\ from\ the\ node\ to\ get\ the\ weight\ from\r\n\t@param\ to\ the\ node\ to\ get\ the\ weight\ to\r\n\t@return\ the\ weight\ between\ from\ and\ to\ or\ 0\ if\ no\ edge\ or\ weight\ exists.\r\n
comment3.params=node
comment3.target=java.util.Map\ getNeighborWeights(java.lang.Object)
comment3.text=\r\n\tReturn\ a\ Mapping\ of\ Node\ ->\ Weight\ for\ all\ neighbors\ of\ node\r\n\r\n\t@param\ node\ the\ node\ to\ get\ weight\ mappings\ from\r\n\t@return\ mappings\ from\ node\ to\ weight\r\n
numComments=4
